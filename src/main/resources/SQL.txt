У меня  НЕТ  Ultimate версии IDE,зато есть DBeaver, так что =>

это файл "scripts421.sql":

INSERT INTO faculty (id, name, color) VALUES
(1, 'Gryffindor', 'Red'),
(2, 'Slytherin', 'Green'),
(3, 'Hufflepuff', 'Yellow'),
(4, 'Ravenclaw', 'Blue');

INSERT INTO student (id, name, age, faculty_id) VALUES
(1, 'Harry Potter', 17, 1),
(2, 'Ron Weasley', 17, 1),
(3, 'Hermione Granger', 17, 1),
(4, 'Draco Malfoy', 17, 2),
(5, 'Padma Patil', 17, 4),
(6, 'Lavender Brown', 17, 1),
(7, 'Susan Bones', 17, 3),
(8, 'Trevor', 18, 1),
(9, 'Neville Longbottom', 17, 1),
(10, 'Pansy Parkinson', 17, 2),
(11, 'Victor Krum', 18, 4),
(12, 'Ginny Weasley', 15, 1),
(13, 'Fred Weasley', 18, 1),
(14, 'George Weasley', 18, 1),
(15, 'Dolores Umbridge', 45, 2),
(16, 'Cedric Diggory', 18, 3),
(17, 'Michael Corner', 17, 4),
(18, 'Susan Bones', 17, 3),
(19, 'Ravenna Ravenclaw', 16, 4),
(20, 'Luna Lovegood', 16, 4);

ALTER TABLE student
ADD CONSTRAINT chk_age CHECK (age >= 16);

ALTER TABLE student
ADD CONSTRAINT uq_student_name UNIQUE (name);

ALTER TABLE student
ALTER COLUMN name SET NOT NULL;

ALTER TABLE faculty
ADD CONSTRAINT uq_faculty_color UNIQUE (name, color);

CREATE TRIGGER set_default_age
BEFORE INSERT ON student
FOR EACH ROW
BEGIN
    IF NEW.age IS NULL THEN
        SET NEW.age = 20;
    END IF;
END;


a это файл "scripts422.sql":

CREATE TABLE persons (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    age INT CHECK (age >= 0),
    has_license BOOLEAN NOT NULL
);

CREATE TABLE cars (
    id SERIAL PRIMARY KEY,
    make VARCHAR(50) NOT NULL,
    model VARCHAR(50) NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE personCar (
    person_id INT REFERENCES persons(id) ON DELETE CASCADE,
    car_id INT REFERENCES cars(id) ON DELETE CASCADE,
    PRIMARY KEY (person_id, car_id)
);

ну и "scripts423.sql":

SELECT
    s.name AS student_name,
    s.age AS student_age,
    f.name AS faculty_name
FROM
    student s
JOIN
    faculty f ON s.faculty_id = f.id
WHERE
    f.name = 'Hogwarts';


SELECT
    s.name AS student_name,
    s.age AS student_age,
    f.name AS faculty_name
FROM
    student s
JOIN
    faculty f ON s.faculty_id = f.id
JOIN
    avatar a ON s.id = a.student_id;


